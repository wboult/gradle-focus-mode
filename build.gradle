plugins {
    id 'java'
    id 'application'
}

application {
    mainClass = 'com.example.focusmode.FocusUI'
}

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

// Apply common configuration to all nested subprojects
subprojects {
    apply plugin: 'maven-publish'

    // Common configuration for all Java projects
    group = 'com.example'
    version = '1.0-SNAPSHOT'

    afterEvaluate {
        // Only configure publishing for projects with the java plugin (not java-platform)
        if (plugins.hasPlugin('java')) {
            publishing {
                publications {
                    maven(MavenPublication) {
                        from components.java
                    }
                }
            }
        }
    }
}

// Note: Individual project configuration is handled by the subprojects block above
// The project() wrapper in individual build.gradle files provides project-specific config
// All projects are included in settings.gradle

ext {
    // Define the focused projects here using full paths. Example: [':core:project-001', ':ui:project-015']
    // When empty, all projects use project dependencies (normal development mode)
    // When populated, only focused projects use project dependencies, others use JARs
    focusedProjects = []

    // Method to return project dep if in focus, else jar dep
    // projectName format: :category:project-XXX
    focusedDep = { projectName, jarCoord ->
        // If no projects are focused, use project dependencies for all (normal development)
        if (focusedProjects.isEmpty()) {
            return project(projectName)
        }
        // If focusing on specific projects, only those get project dependencies
        if (focusedProjects.contains(projectName)) {
            return project(projectName)
        } else {
            return jarCoord
        }
    }
}

task publishAllToMavenLocal {
    dependsOn subprojects.collect { it.tasks.named('publishToMavenLocal') }
}


