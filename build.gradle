plugins {
    id 'java'
    id 'application'
}

application {
    mainClass = 'com.example.focusmode.FocusUI'
}

allprojects {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

// Apply common configuration to all nested subprojects
subprojects {
    apply plugin: 'maven-publish'

    // Common configuration for all Java projects
    group = 'com.example'
    version = '1.0-SNAPSHOT'

    afterEvaluate {
        // Only configure publishing for projects with the java plugin (not java-platform)
        if (plugins.hasPlugin('java')) {
            publishing {
                publications {
                    maven(MavenPublication) {
                        from components.java
                    }
                }
            }
        }
    }
}

// Configure projects by category using nested project syntax
apply from: 'projects.gradle'

gradle.ext.projectDirs.each { projectName, dir ->
    project(":${dir}:${projectName}") {
        // Project-specific configuration can be added here
        // Currently inherits from subprojects block above
    }
}

ext {
    // Define the focused projects here using full paths. Example: [':core:project-001', ':ui:project-015']
    // When empty, all projects use project dependencies (normal development mode)
    // When populated, only focused projects use project dependencies, others use JARs
    focusedProjects = []

    // Method to return project dep if in focus, else jar dep
    // projectName format: :category:project-XXX
    focusedDep = { projectName, jarCoord ->
        // If no projects are focused, use project dependencies for all (normal development)
        if (focusedProjects.isEmpty()) {
            return project(projectName)
        }
        // If focusing on specific projects, only those get project dependencies
        if (focusedProjects.contains(projectName)) {
            return project(projectName)
        } else {
            return jarCoord
        }
    }
}

task publishAllToMavenLocal {
    dependsOn subprojects.collect { it.tasks.named('publishToMavenLocal') }
}

// Task to apply focus mode (writes exclusions directly)
task applyFocus {
    group = 'focus'
    description = 'Apply focus mode by writing exclusions directly'
    doLast {
        def includedStr = System.getProperty('focus.includedProjects')
        if (includedStr) {
            def included = includedStr.split(',') as Set
            def allProjects = (1..100).collect { String.format('project-%03d', it) }
            def excludedProjects = allProjects.findAll { !included.contains(it) }

            // Write to .idea/modules/focus-mode.iml
            def imlFile = file('.idea/modules/focus-mode.iml')
            imlFile.parentFile.mkdirs()
            def excludeXml = excludedProjects.collect { "<excludeFolder url=\"file://\$MODULE_DIR\$/../../$it\" />" }.join('\n')
            imlFile.text = """<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="AdditionalModuleElements">
    <content url="file://\$MODULE_DIR\$/../.." dumb="true">
${excludeXml}
    </content>
  </component>
</module>"""
            println "Wrote exclusions to .idea/modules/focus-mode.iml for: $excludedProjects"
        }
    }
}


